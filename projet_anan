
def ai_play_turn(player, hand, table, trump):
    print(f"{player}, it's your turn (AI).")
    print(f"Table: {table}")

    # Display AI player's hand
    print(f"AI's hand: {hand}")

    color_on_table = table[0][1] if table else None  # Color on the table if any

    if has_color(hand, color_on_table):  # AI has requested color
        print(f"AI plays a card with color {color_on_table}.")
        valid_cards = [card for card in hand if card[1] == color_on_table]
        chosen_card = random.choice(valid_cards)


    else:  # AI plays a trump or any card if unable to follow the color
        print("AI doesn't have the requested color. Playing a trump card or any card.")
        valid_cards = [card for card in hand]

    chosen_card = random.choice(valid_cards)
    hand.remove(chosen_card)
    table.append(chosen_card)
    print(f"{player} (AI) played: {chosen_card}")
    return chosen_card




    elif num_players == 1:
        game_mode = "2"
        players = get_player_names(1)
        print("Starting game against AI with player:", players[0])

        dealt_initial_cards, remaining_cards = distribute_initial_cards()
        trump_card = select_trump_card(remaining_cards)
        table = []
        for _ in range(20):
            current_player = players[0]
            current_hand = dealt_initial_cards[0]

            if current_player == "IA":
                played_card = ai_play_turn(current_player, current_hand, table, trump_card[1])
            else:
                played_card = play_turn(current_player, current_hand, table, trump_card[1])

            current_player_index = (current_player_index + 1) % num_players

    else:
        print("Invalid choice. Exiting.")

# Start the game
start_belote()
